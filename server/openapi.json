{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/generate": {
            "post": {
                "summary": "Generate",
                "operationId": "generate_generate_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneratePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/run": {
            "post": {
                "summary": "Run",
                "operationId": "run_run_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/generate_inference": {
            "post": {
                "summary": "Generate Inference",
                "operationId": "generate_inference_generate_inference_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InferPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/run_inference": {
            "post": {
                "summary": "Inference",
                "operationId": "inference_run_inference_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InferPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DataFormat": {
                "type": "string",
                "enum": [
                    "imagefolder",
                    "csv",
                    "json",
                    "other"
                ],
                "title": "DataFormat"
            },
            "DataType": {
                "type": "string",
                "enum": [
                    "file",
                    "folder"
                ],
                "title": "DataType"
            },
            "EarlyStoppingConfig": {
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "enabled"
                ],
                "title": "EarlyStoppingConfig"
            },
            "GenerateDataModel": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TaskConfig"
                    },
                    "dataloading": {
                        "type": "string",
                        "title": "Dataloading",
                        "description": "Data loading configuration as a string. This will have the user's custom data loading code."
                    },
                    "preprocessing": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PreprocessingStep"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Preprocessing",
                        "description": "List of preprocessing steps to apply to the data"
                    },
                    "model": {
                        "$ref": "#/components/schemas/ModelConfig"
                    },
                    "training": {
                        "$ref": "#/components/schemas/TrainingConfig"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "dataloading",
                    "model",
                    "training"
                ],
                "title": "GenerateDataModel"
            },
            "GeneratePayload": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/GenerateDataModel"
                    },
                    "base_path": {
                        "type": "string",
                        "title": "Base Path",
                        "default": "/home/haroon/REPOS/backend/modules"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "GeneratePayload"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InferPayload": {
                "properties": {
                    "base_path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Base Path"
                    },
                    "task": {
                        "type": "string",
                        "enum": [
                            "image",
                            "text",
                            "audio"
                        ],
                        "title": "Task",
                        "description": "Type of task for inference"
                    },
                    "subtask": {
                        "type": "string",
                        "enum": [
                            "Image Classification",
                            "Object Detection",
                            "Image Segmentation",
                            "Image Generation",
                            "Text Classification",
                            "Text Generation",
                            "Machine Translation",
                            "Text Summarization",
                            "Speech Recognition",
                            "Audio Classification",
                            "Audio Generation",
                            "Voice Conversion"
                        ],
                        "title": "Subtask",
                        "description": "Subtask for inference"
                    },
                    "model_path": {
                        "type": "string",
                        "title": "Model Path",
                        "description": "Path to the model file"
                    },
                    "model_load_method": {
                        "type": "string",
                        "enum": [
                            "torch.load",
                            "onnx"
                        ],
                        "title": "Model Load Method",
                        "description": "How to load the model"
                    },
                    "input_data": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Input Data",
                        "description": "List of input data for inference"
                    },
                    "input_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Input Size"
                    },
                    "output_type": {
                        "type": "string",
                        "enum": [
                            "json",
                            "text",
                            "image",
                            "audio",
                            "multitype"
                        ],
                        "title": "Output Type",
                        "default": "json"
                    },
                    "tokenizer_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tokenizer Type"
                    },
                    "tokenizer_params": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tokenizer Params"
                    },
                    "return_logits": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Return Logits",
                        "default": false
                    },
                    "return_probs": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Return Probs",
                        "default": false
                    },
                    "top_k": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top K"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature"
                    },
                    "max_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Length"
                    }
                },
                "type": "object",
                "required": [
                    "task",
                    "subtask",
                    "model_path",
                    "model_load_method",
                    "input_data"
                ],
                "title": "InferPayload"
            },
            "LayerDefinition": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "LayerDefinition"
            },
            "LossConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "LossConfig"
            },
            "MetricConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "MetricConfig"
            },
            "ModelConfig": {
                "properties": {
                    "use_pretrained": {
                        "type": "boolean",
                        "title": "Use Pretrained"
                    },
                    "pretrained": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PretrainedModel"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "layers": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/LayerDefinition"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Layers"
                    }
                },
                "type": "object",
                "required": [
                    "use_pretrained"
                ],
                "title": "ModelConfig"
            },
            "OptimizerConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "OptimizerConfig"
            },
            "PreprocessingStep": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PreprocessingStep"
            },
            "PretrainedModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PretrainedModel"
            },
            "RunPayload": {
                "properties": {
                    "base_path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Base Path"
                    }
                },
                "type": "object",
                "title": "RunPayload"
            },
            "SchedulerConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "params": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Params"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "SchedulerConfig"
            },
            "TaskConfig": {
                "properties": {
                    "task_type": {
                        "type": "string",
                        "enum": [
                            "ml",
                            "dl"
                        ],
                        "title": "Task Type"
                    },
                    "main_task": {
                        "type": "string",
                        "title": "Main Task"
                    },
                    "sub_task": {
                        "type": "string",
                        "title": "Sub Task"
                    },
                    "data_format": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DataFormat"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "data_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DataType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "task_type",
                    "main_task",
                    "sub_task"
                ],
                "title": "TaskConfig"
            },
            "TrainingConfig": {
                "properties": {
                    "batch_size": {
                        "type": "integer",
                        "title": "Batch Size"
                    },
                    "learning_rate": {
                        "type": "number",
                        "title": "Learning Rate"
                    },
                    "epochs": {
                        "type": "integer",
                        "title": "Epochs"
                    },
                    "weight_decay": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Weight Decay",
                        "default": 0.0
                    },
                    "optimizer": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OptimizerConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "scheduler": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SchedulerConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "loss": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LossConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "metrics": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MetricConfig"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metrics"
                    },
                    "early_stopping": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EarlyStoppingConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "monitoring": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "use_tensorboard",
                                        "use_wandb",
                                        "use_mlflow",
                                        "resource_alerts",
                                        "threshold_alerts"
                                    ]
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Monitoring"
                    }
                },
                "type": "object",
                "required": [
                    "batch_size",
                    "learning_rate",
                    "epochs"
                ],
                "title": "TrainingConfig"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}